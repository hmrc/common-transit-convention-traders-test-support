#%RAML 1.0
---
title: CTC Traders Test Support

protocols: [ HTTPS ]
baseUri: https://common-transit-convention-traders-test-support.hmrc.gov.uk/
version: 2.0

documentation:
 - title: Overview
   content: !include docs/overview.md
 - title: Versioning
   content: !include https://developer.service.hmrc.gov.uk/api-documentation/assets/common/docs/versioning.md
 - title: Errors
   content: !include docs/errors.md

mediaType: [ application/json, application/xml ]

uses:
  sec: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/securitySchemes.raml
  headers: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/headers.raml
  annotations: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/annotations.raml
  types: https://developer.service.hmrc.gov.uk/api-documentation/assets/common/modules/types.raml

traits:
  contentJsonHeader:
    headers:
      Content-Type:
        description: Specifies the format of the request body, which must be JSON.
        type: string
        required: true
        example: application/json


/test/customs/transits/movements:
#  /arrivals:
#    /{arrivalId}:
#      /messages:
#        uriParameters:
#          arrivalId:
#            description: The ID specifying the arrival.
#            type: string
#            example: "1"
#            required: true
#        post:
#          displayName: Inject a fake NCTS arrival message
#          description: |
#            Inject a message type into the test NCTS database for a given arrival movement.
#          is: [contentJsonHeader]
#          (annotations.scope): "common-transit-convention-traders-test-support"
#          securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders-test-support" ] } ]
#          responses:
#            201:
#              description: When a test message has been successfully injected.
#              body:
#                application/json:
#                    description: JSON Payload
#                    example: |
#                        {
#                          "_links": {
#                            "self": {
#                              "href": "/customs/transits/movements/arrivals/1/messages/2"
#                            },
#                            "arrival": {
#                              "href": "/customs/transits/movements/arrivals/1"
#                            }
#                          },
#                          "arrivalId": "1",
#                          "messageId": "2",
#                          "messageType": "IEXXX",
#                          "body": "<CCXXX>...</CCXXX>"
#                        }
#            404:
#              description: When the Arrival Movement does not exist, has been archived or is not available to the EORI number.
#            400:
#              description: When the message type requested is not valid for the current state of the movement.
#          body:
#            application/json:
#              description: JSON with message type
#              example: |
#                {
#                     "message": {
#                         "messageType": "IEXXX"
#                     }
#                 }
  /departures:
    /{departureId}:
      /messages:
        uriParameters:
          departureId:
            description: The ID specifying the departure.
            type: string
            example: "1"
            required: true
        post:
          displayName: Inject a fake NCTS departure message
          description: |
            Inject a message type into the test NCTS database for a given departure.
          is: [contentJsonHeader]
          (annotations.scope): "common-transit-convention-traders-test-support"
          headers:
            accept:
                displayName: Accept
                description: |
                  Specifies the response format, which must be JSON, and the [version](/api-documentation/docs/reference-guide#versioning) of the API to be used.
                  
                  For NCTS phase 5 and version 2.0 of this API, use the example value.
                type: string
                required: true
                example: application/vnd.hmrc.2.0+json
          securedBy: [ sec.oauth_2_0: { scopes: [ "common-transit-convention-traders-test-support" ] } ]
          responses:
            201:
              description: When a test message has been successfully injected.
              body:
                application/json:
                    description: JSON Payload
                    example: |
                        {
                          "_links": {
                            "self": {
                              "href": "/customs/transits/movements/departures/1/messages/2"
                            },
                            "departure": {
                              "href": "/customs/transits/movements/departures/1"
                            }
                          },
                          "departureId": "1",
                          "messageId": "2",
                          "messageType": "IEXXX",
                          "body": "<CCXXX>...</CCXXX>"
                        }
            404:
              description: When the departure does not exist, has been archived or is not available to the EORI number.
            400:
              description: When the message type requested is not valid for the current state of the movement.
          body:
            application/json:
              description: JSON with message type
              example: |
                {
                     "message": {
                         "messageType": "IEXXX"
                     }
                 }
